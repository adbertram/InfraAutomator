trigger:
  branches:
    include:
      - master
steps:
  - task: TerraformCLI@0
    name: "Download Terraform providers"
    inputs:
      command: 'init'
  - task: TerraformCLI@0
    name: "Test Terraform plan"
    inputs:
      command: 'plan'
      environmentServiceName: 'ARM'
      commandOptions: '--var-file=secrets.tfvars'
  - task: TerraformCLI@0
    name: "Build infrastructure"
    inputs:
      command: 'apply'
      environmentServiceName: 'ARM'
      commandOptions: '--var-file=secrets.tfvars'
  - task: PowerShell@2
    displayName: "Configure VMs"
    inputs:
      targetType: 'inline'
      script: |
        xxxxxxxxxx
      pwsh: true
  - task: AzurePowerShell@5
    displayName: "Run Azure resource tests"
    inputs:
      azureSubscription: 'ARM'
      ScriptType: 'FilePath'
      ScriptPath: '$(workingDir)/tests/invoke-test.ps1'
      ScriptArguments: '-TestScriptFilePath "$(workingDir)/tests/vmss.infrastructure.tests.ps1" -TestResultsFilePath "$(workingDir)/tests/vmss.infrastructure.tests.xml" -TestScriptParameters @{publicDnsName="$(publicDnsName)"}'
      FailOnStandardError: true
      azurePowerShellVersion: 'LatestVersion'
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: "NUnit"
      testResultsFiles: "$(workingDir)/tests/vmss.infrastructure.tests.xml"
      failTaskOnFailedTests: true
  - task: PowerShell@2
    displayName: "Run configuration tests"
    inputs:
      targetType: 'inline'
      script: |
        xxxxxxxxxx
      pwsh: true
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: "NUnit"
      testResultsFiles: "$(workingDir)/tests/vmss.infrastructure.tests.xml"
      failTaskOnFailedTests: true