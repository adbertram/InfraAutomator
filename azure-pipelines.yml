trigger:
  branches:
    include:
      - master

variables:
  keyvault_name: "infraautomator-keyvault"

steps:
  - task: AzureKeyVault@1
    displayName: "Download the Keyvault secrets"
    inputs:
      azureSubscription: 'ARM'
      KeyVaultName: $(keyvault_name)
      SecretsFilter: 'vmAdminUsername,vmAdminPassword'
  - task: TerraformCLI@0
    displayName: "Download Terraform providers"
    inputs:
      command: 'init'
  - task: TerraformCLI@0
    displayName: "Test Terraform plan"
    inputs:
      command: 'plan'
      environmentServiceName: 'ARM'
      commandOptions: '-input=false --var="vmAdminUsername=$(vmAdminUsername)" --var="vmAdminPassword=$(vmAdminPassword)"'
  - task: TerraformCLI@0
    displayName: "Build the VM"
    inputs:
      command: 'apply'
      environmentServiceName: 'ARM'
      commandOptions: '-input=false --var="vmAdminUsername=$(vmAdminUsername)" --var="vmAdminPassword=$(vmAdminPassword)"'
  - task: AzurePowerShell@5
    displayName: "Run the infrastructure tests"
    inputs:
      azureSubscription: 'ARM'
      ScriptType: 'FilePath'
      ScriptPath: '$(System.DefaultWorkingDirectory)/tests/invoke-test.ps1'
      ScriptArguments: '-TestScriptFilePath "$(System.DefaultWorkingDirectory)/tests/vm.tests.ps1" -TestResultsFilePath "$(System.DefaultWorkingDirectory)/tests/results.xml"'
      FailOnStandardError: true
      azurePowerShellVersion: 'LatestVersion'
  - task: PublishTestResults@2
    displayName: "Publish the test results to the pipeline"
    inputs:
      testResultsFormat: "NUnit"
      testResultsFiles: "$(System.DefaultWorkingDirectory)/tests/results.xml"
      failTaskOnFailedTests: true